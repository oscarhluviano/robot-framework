name: Run Robot Framework Tests

on:
  # schedule:
  #   - cron: '0 18 * * *' # Schedule to run daily at 6 PM Central Time
  # push:
  #   branches:
  #     - main # Run on push events to the main branch
  # pull_request:
  #   branches:
  #     - main # Run on pull requests to the main branch
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  run-tests:
    runs-on: ubuntu-latest # Use the latest version of Ubuntu

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2 # Checkout the repository code

    - name: Set up Python
      uses: actions/setup-python@v2 # Set up the Python environment
      with:
        python-version: '3.9' # Specify the Python version to use

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip # Upgrade pip to the latest version
        pip install pipenv # Install pipenv

    - name: Install dependencies
      run: pipenv install --dev --python 3.9 # Install dependencies from the Pipfile specifying Python 3.9

    - name: Install Chrome
      run: |
        sudo apt-get update # Update the package list
        sudo apt-get install -y wget # Install wget
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb # Download the latest stable version of Google Chrome
        sudo dpkg -i google-chrome-stable_current_amd64.deb # Install the downloaded Chrome package
        sudo apt-get install -f # Fix broken dependencies, if any

    - name: Run Robot Framework tests
      run: pipenv run robot -d output tests/test.robot # Run the Robot Framework tests and output results to the 'output' directory

    - name: Upload Robot Framework test results
      uses: actions/upload-artifact@v2 # Upload test results as artifacts
      with:
        name: robot-framework-test-results
        path: output/ # Specify the directory containing the test result files

    - name: Upload Robot Framework test results to Xray
      run: |
          python -m pip install requests
          python << EOF
          import json
          import requests
          
          jira_base_url = '${{ secrets.JIRA_BASE_URL }}'
          personal_access_token = '${{ secrets.PERSONAL_ACCESS_TOKEN }}'
          project_key = '${{ secrets.JIRA_PROJECT_KEY }}'
          
          info_json = { 
              'fields': {
                  'project': {
                      'key': 'SEA'
                  },
                  'summary': 'Test Execution for RF execution',
                  'description': 'This contains test automation results'
                  # 'fixVersions': [ {'name': 'v1.0'}],
                  # 'customfield_11805': ['chrome'],
                  # 'customfield_11807': ['CALC-8895']
              }
          }
          
          files = {
              'file': ('robot.xml', open('output/output.xml', 'rb')),
              'info': ('info.json', json.dumps(info_json))
          }
          
          headers = {'Authorization': 'Bearer ' + personal_access_token}
          response = requests.post(f'{jira_base_url}/rest/raven/2.0/import/execution/robot/multipart', files=files, headers=headers)
          
          print(response.status_code)
          print(response.content)
          EOF

    # - name: Upload Robot Framework test results to Xray
    #   uses: mikepenz/xray-action@v3.0.5
    #   with:
    #     username: ${{ secrets.JIRA_USERNAME }}
    #     password: ${{ secrets.JIRA_API_TOKEN }}
    #     xrayBaseUrl: ${{ secrets.JIRA_BASE_URL }}
    #     testFormat: 'robot'
    #     testPaths: 'output/output.xml'
    #     projectKey: ${{ secrets.JIRA_PROJECT_KEY }} # Replace with your Jira project key
    #     xrayCloud: 'false' # Set cloud to false for Xray Server

    # - name: Create Test Execution in Jira
    #   id: create-test-execution
    #   run: |
    #     RESPONSE=$(curl -L -u ${{ secrets.JIRA_USERNAME }}:${{ secrets.JIRA_API_TOKEN }} \
    #       -H "Content-Type: application/json" \
    #       -X POST \
    #       -d '{
    #         "fields": {
    #           "project": {
    #             "key": "" # Replace with your Jira project key
    #           },
    #           "summary": "Automated Test Execution",
    #           "description": "This test execution was created automatically",
    #           "issuetype": {
    #             "name": "Test Execution"
    #           }
    #         }
    #       }' ${{ secrets.JIRA_BASE_URL }}/rest/api/2/issue)
    #     echo "Response: $RESPONSE" # Print the response for debugging
    #     TEST_EXEC_KEY=$(echo $RESPONSE | jq -r '.key')
    #     echo "TEST_EXEC_KEY=$TEST_EXEC_KEY" >> $GITHUB_ENV

    # - name: Upload Robot Framework test results to Xray
    #   run: |
    #     curl -u ${{ secrets.JIRA_USERNAME }}:${{ secrets.JIRA_API_TOKEN }} \
    #       -H "Content-Type: multipart/form-data" \
    #       -F "file=@output/output.xml" \
    #       -F "info=@output/report.html" \
    #       -F "info=@output/log.html" \
    #       "${{ secrets.JIRA_BASE_URL }}/rest/raven/1.0/import/execution/robot?testExecKey=${{ env.TEST_EXEC_KEY }}"
  
